// This file was generated by
//     //third_party/jni_zero/jni_zero.py
// For
//     android.net.connectivity.org.chromium.base.task.TaskRunnerImpl

#ifndef android_net_connectivity_org_chromium_base_task_TaskRunnerImpl_JNI
#define android_net_connectivity_org_chromium_base_task_TaskRunnerImpl_JNI

#include <jni.h>

#include "third_party/jni_zero/jni_export.h"
#include "third_party/jni_zero/jni_zero_internal.h"
namespace base {

// Java to native functions
JNI_ZERO_BOUNDARY_EXPORT void Java_android_net_connectivity_J_N_M00zN9h9(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeTaskRunnerAndroid) {
  reinterpret_cast<TaskRunnerAndroid*>(nativeTaskRunnerAndroid)->Destroy(env);
}

// Forward declaration. To be implemented by the including .cc file.
static jlong JNI_TaskRunnerImpl_Init(JNIEnv* env, jint taskRunnerType, jint taskTraits);

JNI_ZERO_BOUNDARY_EXPORT jlong Java_android_net_connectivity_J_N_MdNofz7Z(
    JNIEnv* env,
    jclass jcaller,
    jint taskRunnerType,
    jint taskTraits) {
  auto _ret = JNI_TaskRunnerImpl_Init(env, taskRunnerType, taskTraits);
  return _ret;
}

JNI_ZERO_BOUNDARY_EXPORT void Java_android_net_connectivity_J_N_MdtDn8B1(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeTaskRunnerAndroid,
    jobject task,
    jlong delay,
    jobject runnableClassName) {
  std::string runnableClassName_converted = jni_zero::FromJniType<std::string>(
      env,
      jni_zero::JavaParamRef<jobject>(env, runnableClassName));
  reinterpret_cast<TaskRunnerAndroid*>(nativeTaskRunnerAndroid)->PostDelayedTask(
      env,
      jni_zero::JavaParamRef<jobject>(env, task),
      delay,
      runnableClassName_converted);
}



}  // namespace base

#endif  // android_net_connectivity_org_chromium_base_task_TaskRunnerImpl_JNI
