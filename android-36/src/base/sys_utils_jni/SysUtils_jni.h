// This file was generated by
//     //third_party/jni_zero/jni_zero.py
// For
//     android.net.connectivity.org.chromium.base.SysUtils

#ifndef android_net_connectivity_org_chromium_base_SysUtils_JNI
#define android_net_connectivity_org_chromium_base_SysUtils_JNI

#include <jni.h>

#include "third_party/jni_zero/jni_export.h"
#include "third_party/jni_zero/jni_zero_internal.h"

// Class Accessors
#ifndef android_net_connectivity_org_chromium_base_SysUtils_clazz_defined
#define android_net_connectivity_org_chromium_base_SysUtils_clazz_defined
inline jclass android_net_connectivity_org_chromium_base_SysUtils_clazz(JNIEnv* env) {
  static const char kClassName[] = "android.net.connectivity.org.chromium.base.SysUtils";
  static std::atomic<jclass> cached_class;
  return jni_zero::internal::LazyGetClass(env, kClassName, &cached_class);
}
#endif


namespace base::android {

// Java to native functions
// Forward declaration. To be implemented by the including .cc file.
static void JNI_SysUtils_LogPageFaultCountToTracing(JNIEnv* env);

JNI_ZERO_BOUNDARY_EXPORT void Java_android_net_connectivity_J_N_MZfdBYbM(
    JNIEnv* env,
    jclass jcaller) {
  JNI_SysUtils_LogPageFaultCountToTracing(env);
}


// Native to Java functions
static jint Java_SysUtils_amountOfPhysicalMemoryKB(JNIEnv* env) {
  static std::atomic<jmethodID> cached_method_id(nullptr);
  jclass clazz = android_net_connectivity_org_chromium_base_SysUtils_clazz(env);
  CHECK_CLAZZ(env, clazz, clazz, 0);
  jni_zero::internal::JniJavaCallContext<true> call_context;
  call_context.Init<jni_zero::MethodID::TYPE_STATIC>(
      env,
      clazz,
      "amountOfPhysicalMemoryKB",
      "()I",
      &cached_method_id);
  auto _ret = env->CallStaticIntMethod(clazz, call_context.method_id());
  return _ret;
}

static jboolean Java_SysUtils_isCurrentlyLowMemory(JNIEnv* env) {
  static std::atomic<jmethodID> cached_method_id(nullptr);
  jclass clazz = android_net_connectivity_org_chromium_base_SysUtils_clazz(env);
  CHECK_CLAZZ(env, clazz, clazz, false);
  jni_zero::internal::JniJavaCallContext<true> call_context;
  call_context.Init<jni_zero::MethodID::TYPE_STATIC>(
      env,
      clazz,
      "isCurrentlyLowMemory",
      "()Z",
      &cached_method_id);
  auto _ret = env->CallStaticBooleanMethod(clazz, call_context.method_id());
  return _ret;
}

static jboolean Java_SysUtils_isLowEndDevice(JNIEnv* env) {
  static std::atomic<jmethodID> cached_method_id(nullptr);
  jclass clazz = android_net_connectivity_org_chromium_base_SysUtils_clazz(env);
  CHECK_CLAZZ(env, clazz, clazz, false);
  jni_zero::internal::JniJavaCallContext<true> call_context;
  call_context.Init<jni_zero::MethodID::TYPE_STATIC>(
      env,
      clazz,
      "isLowEndDevice",
      "()Z",
      &cached_method_id);
  auto _ret = env->CallStaticBooleanMethod(clazz, call_context.method_id());
  return _ret;
}



}  // namespace base::android

#endif  // android_net_connectivity_org_chromium_base_SysUtils_JNI
