// This file was generated by
//     //third_party/jni_zero/jni_zero.py
// For
//     android.net.connectivity.org.chromium.base.FieldTrialList

#ifndef android_net_connectivity_org_chromium_base_FieldTrialList_JNI
#define android_net_connectivity_org_chromium_base_FieldTrialList_JNI

#include <jni.h>

#include "third_party/jni_zero/jni_export.h"
#include "third_party/jni_zero/jni_zero_internal.h"

// Java to native functions
// Forward declaration. To be implemented by the including .cc file.
static jboolean JNI_FieldTrialList_CreateFieldTrial(
    JNIEnv* env,
    std::string& trialName,
    std::string& groupName);

JNI_ZERO_BOUNDARY_EXPORT jboolean Java_android_net_connectivity_J_N_MeuypufV(
    JNIEnv* env,
    jclass jcaller,
    jobject trialName,
    jobject groupName) {
  std::string trialName_converted = jni_zero::FromJniType<std::string>(
      env,
      jni_zero::JavaParamRef<jobject>(env, trialName));
  std::string groupName_converted = jni_zero::FromJniType<std::string>(
      env,
      jni_zero::JavaParamRef<jobject>(env, groupName));
  auto _ret = JNI_FieldTrialList_CreateFieldTrial(env, trialName_converted, groupName_converted);
  return _ret;
}

// Forward declaration. To be implemented by the including .cc file.
static std::string JNI_FieldTrialList_FindFullName(JNIEnv* env, std::string& trialName);

JNI_ZERO_BOUNDARY_EXPORT jobject Java_android_net_connectivity_J_N_MlRxL19I(
    JNIEnv* env,
    jclass jcaller,
    jobject trialName) {
  std::string trialName_converted = jni_zero::FromJniType<std::string>(
      env,
      jni_zero::JavaParamRef<jobject>(env, trialName));
  auto _ret = JNI_FieldTrialList_FindFullName(env, trialName_converted);
  jobject converted_ret = jni_zero::ToJniType(env, _ret).Release();
  return converted_ret;
}

// Forward declaration. To be implemented by the including .cc file.
static std::string JNI_FieldTrialList_GetVariationParameter(
    JNIEnv* env,
    std::string& trialName,
    std::string& parameterKey);

JNI_ZERO_BOUNDARY_EXPORT jobject Java_android_net_connectivity_J_N_MR6yK_1wY(
    JNIEnv* env,
    jclass jcaller,
    jobject trialName,
    jobject parameterKey) {
  std::string trialName_converted = jni_zero::FromJniType<std::string>(
      env,
      jni_zero::JavaParamRef<jobject>(env, trialName));
  std::string parameterKey_converted = jni_zero::FromJniType<std::string>(
      env,
      jni_zero::JavaParamRef<jobject>(env, parameterKey));
  auto _ret = JNI_FieldTrialList_GetVariationParameter(
      env,
      trialName_converted,
      parameterKey_converted);
  jobject converted_ret = jni_zero::ToJniType(env, _ret).Release();
  return converted_ret;
}

// Forward declaration. To be implemented by the including .cc file.
static void JNI_FieldTrialList_LogActiveTrials(JNIEnv* env);

JNI_ZERO_BOUNDARY_EXPORT void Java_android_net_connectivity_J_N_Mxmj6HmS(
    JNIEnv* env,
    jclass jcaller) {
  JNI_FieldTrialList_LogActiveTrials(env);
}

// Forward declaration. To be implemented by the including .cc file.
static jboolean JNI_FieldTrialList_TrialExists(JNIEnv* env, std::string& trialName);

JNI_ZERO_BOUNDARY_EXPORT jboolean Java_android_net_connectivity_J_N_MQvsrB2i(
    JNIEnv* env,
    jclass jcaller,
    jobject trialName) {
  std::string trialName_converted = jni_zero::FromJniType<std::string>(
      env,
      jni_zero::JavaParamRef<jobject>(env, trialName));
  auto _ret = JNI_FieldTrialList_TrialExists(env, trialName_converted);
  return _ret;
}



#endif  // android_net_connectivity_org_chromium_base_FieldTrialList_JNI
