// This file was generated by
//     //third_party/jni_zero/jni_zero.py
// For
//     android.net.connectivity.org.chromium.base.jank_tracker.JankMetricUMARecorder

#ifndef android_net_connectivity_org_chromium_base_jank_1tracker_JankMetricUMARecorder_JNI
#define android_net_connectivity_org_chromium_base_jank_1tracker_JankMetricUMARecorder_JNI

#include <jni.h>

#include "third_party/jni_zero/jni_export.h"
#include "third_party/jni_zero/jni_zero_internal.h"
namespace base::android {

// Java to native functions
// Forward declaration. To be implemented by the including .cc file.
static void JNI_JankMetricUMARecorder_RecordJankMetrics(
    JNIEnv* env,
    const jni_zero::JavaParamRef<jlongArray>& durationsNs,
    const jni_zero::JavaParamRef<jintArray>& missedVsyncs,
    jlong reportingIntervalStartTime,
    jlong reportingIntervalDuration,
    jint scenario);

JNI_ZERO_BOUNDARY_EXPORT void Java_android_net_connectivity_J_N_MW_1d8G9n(
    JNIEnv* env,
    jclass jcaller,
    jobject durationsNs,
    jobject missedVsyncs,
    jlong reportingIntervalStartTime,
    jlong reportingIntervalDuration,
    jint scenario) {
  JNI_JankMetricUMARecorder_RecordJankMetrics(
      env,
      jni_zero::JavaParamRef<jlongArray>(env, static_cast<jlongArray>(durationsNs)),
      jni_zero::JavaParamRef<jintArray>(env, static_cast<jintArray>(missedVsyncs)),
      reportingIntervalStartTime,
      reportingIntervalDuration,
      scenario);
}



}  // namespace base::android

#endif  // android_net_connectivity_org_chromium_base_jank_1tracker_JankMetricUMARecorder_JNI
