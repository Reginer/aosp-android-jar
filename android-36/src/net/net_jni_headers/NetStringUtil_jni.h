// This file was generated by
//     //third_party/jni_zero/jni_zero.py
// For
//     android.net.connectivity.org.chromium.net.NetStringUtil

#ifndef android_net_connectivity_org_chromium_net_NetStringUtil_JNI
#define android_net_connectivity_org_chromium_net_NetStringUtil_JNI

#include <jni.h>

#include "third_party/jni_zero/jni_export.h"
#include "third_party/jni_zero/jni_zero_internal.h"

// Class Accessors
#ifndef android_net_connectivity_org_chromium_net_NetStringUtil_clazz_defined
#define android_net_connectivity_org_chromium_net_NetStringUtil_clazz_defined
inline jclass android_net_connectivity_org_chromium_net_NetStringUtil_clazz(JNIEnv* env) {
  static const char kClassName[] = "android.net.connectivity.org.chromium.net.NetStringUtil";
  static std::atomic<jclass> cached_class;
  return jni_zero::internal::LazyGetClass(env, kClassName, &cached_class);
}
#endif


namespace net::android {

// Native to Java functions
static jni_zero::ScopedJavaLocalRef<jstring> Java_NetStringUtil_convertToUnicode(
    JNIEnv* env,
    const jni_zero::JavaRef<jobject>& text,
    const jni_zero::JavaRef<jstring>& charsetName) {
  static std::atomic<jmethodID> cached_method_id(nullptr);
  jclass clazz = android_net_connectivity_org_chromium_net_NetStringUtil_clazz(env);
  CHECK_CLAZZ(env, clazz, clazz, nullptr);
  jni_zero::internal::JniJavaCallContext<true> call_context;
  call_context.Init<jni_zero::MethodID::TYPE_STATIC>(
      env,
      clazz,
      "convertToUnicode",
      "(Ljava/nio/ByteBuffer;Ljava/lang/String;)Ljava/lang/String;",
      &cached_method_id);
  auto _ret = env->CallStaticObjectMethod(
      clazz,
      call_context.method_id(),
      text.obj(),
      charsetName.obj());
  jstring _ret2 = static_cast<jstring>(_ret);
  return jni_zero::ScopedJavaLocalRef<jstring>(env, _ret2);
}

static jni_zero::ScopedJavaLocalRef<jstring> Java_NetStringUtil_convertToUnicodeAndNormalize(
    JNIEnv* env,
    const jni_zero::JavaRef<jobject>& text,
    const jni_zero::JavaRef<jstring>& charsetName) {
  static std::atomic<jmethodID> cached_method_id(nullptr);
  jclass clazz = android_net_connectivity_org_chromium_net_NetStringUtil_clazz(env);
  CHECK_CLAZZ(env, clazz, clazz, nullptr);
  jni_zero::internal::JniJavaCallContext<true> call_context;
  call_context.Init<jni_zero::MethodID::TYPE_STATIC>(
      env,
      clazz,
      "convertToUnicodeAndNormalize",
      "(Ljava/nio/ByteBuffer;Ljava/lang/String;)Ljava/lang/String;",
      &cached_method_id);
  auto _ret = env->CallStaticObjectMethod(
      clazz,
      call_context.method_id(),
      text.obj(),
      charsetName.obj());
  jstring _ret2 = static_cast<jstring>(_ret);
  return jni_zero::ScopedJavaLocalRef<jstring>(env, _ret2);
}

static jni_zero::ScopedJavaLocalRef<jstring> Java_NetStringUtil_convertToUnicodeWithSubstitutions(
    JNIEnv* env,
    const jni_zero::JavaRef<jobject>& text,
    const jni_zero::JavaRef<jstring>& charsetName) {
  static std::atomic<jmethodID> cached_method_id(nullptr);
  jclass clazz = android_net_connectivity_org_chromium_net_NetStringUtil_clazz(env);
  CHECK_CLAZZ(env, clazz, clazz, nullptr);
  jni_zero::internal::JniJavaCallContext<true> call_context;
  call_context.Init<jni_zero::MethodID::TYPE_STATIC>(
      env,
      clazz,
      "convertToUnicodeWithSubstitutions",
      "(Ljava/nio/ByteBuffer;Ljava/lang/String;)Ljava/lang/String;",
      &cached_method_id);
  auto _ret = env->CallStaticObjectMethod(
      clazz,
      call_context.method_id(),
      text.obj(),
      charsetName.obj());
  jstring _ret2 = static_cast<jstring>(_ret);
  return jni_zero::ScopedJavaLocalRef<jstring>(env, _ret2);
}

static jni_zero::ScopedJavaLocalRef<jstring> Java_NetStringUtil_toUpperCase(
    JNIEnv* env,
    const jni_zero::JavaRef<jstring>& str) {
  static std::atomic<jmethodID> cached_method_id(nullptr);
  jclass clazz = android_net_connectivity_org_chromium_net_NetStringUtil_clazz(env);
  CHECK_CLAZZ(env, clazz, clazz, nullptr);
  jni_zero::internal::JniJavaCallContext<true> call_context;
  call_context.Init<jni_zero::MethodID::TYPE_STATIC>(
      env,
      clazz,
      "toUpperCase",
      "(Ljava/lang/String;)Ljava/lang/String;",
      &cached_method_id);
  auto _ret = env->CallStaticObjectMethod(clazz, call_context.method_id(), str.obj());
  jstring _ret2 = static_cast<jstring>(_ret);
  return jni_zero::ScopedJavaLocalRef<jstring>(env, _ret2);
}



}  // namespace net::android

#endif  // android_net_connectivity_org_chromium_net_NetStringUtil_JNI
