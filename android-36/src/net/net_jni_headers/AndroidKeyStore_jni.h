// This file was generated by
//     //third_party/jni_zero/jni_zero.py
// For
//     android.net.connectivity.org.chromium.net.AndroidKeyStore

#ifndef android_net_connectivity_org_chromium_net_AndroidKeyStore_JNI
#define android_net_connectivity_org_chromium_net_AndroidKeyStore_JNI

#include <jni.h>

#include "third_party/jni_zero/jni_export.h"
#include "third_party/jni_zero/jni_zero_internal.h"

// Class Accessors
#ifndef android_net_connectivity_org_chromium_net_AndroidKeyStore_clazz_defined
#define android_net_connectivity_org_chromium_net_AndroidKeyStore_clazz_defined
inline jclass android_net_connectivity_org_chromium_net_AndroidKeyStore_clazz(JNIEnv* env) {
  static const char kClassName[] = "android.net.connectivity.org.chromium.net.AndroidKeyStore";
  static std::atomic<jclass> cached_class;
  return jni_zero::internal::LazyGetClass(env, kClassName, &cached_class);
}
#endif


namespace net::android {

// Native to Java functions
static jni_zero::ScopedJavaLocalRef<jbyteArray> Java_AndroidKeyStore_encryptWithPrivateKey(
    JNIEnv* env,
    const jni_zero::JavaRef<jobject>& privateKey,
    const jni_zero::JavaRef<jstring>& algorithm,
    const jni_zero::JavaRef<jbyteArray>& message) {
  static std::atomic<jmethodID> cached_method_id(nullptr);
  jclass clazz = android_net_connectivity_org_chromium_net_AndroidKeyStore_clazz(env);
  CHECK_CLAZZ(env, clazz, clazz, nullptr);
  jni_zero::internal::JniJavaCallContext<true> call_context;
  call_context.Init<jni_zero::MethodID::TYPE_STATIC>(
      env,
      clazz,
      "encryptWithPrivateKey",
      "(Ljava/security/PrivateKey;Ljava/lang/String;[B)[B",
      &cached_method_id);
  auto _ret = env->CallStaticObjectMethod(
      clazz,
      call_context.method_id(),
      privateKey.obj(),
      algorithm.obj(),
      message.obj());
  jbyteArray _ret2 = static_cast<jbyteArray>(_ret);
  return jni_zero::ScopedJavaLocalRef<jbyteArray>(env, _ret2);
}

static jni_zero::ScopedJavaLocalRef<jstring> Java_AndroidKeyStore_getPrivateKeyClassName(
    JNIEnv* env,
    const jni_zero::JavaRef<jobject>& privateKey) {
  static std::atomic<jmethodID> cached_method_id(nullptr);
  jclass clazz = android_net_connectivity_org_chromium_net_AndroidKeyStore_clazz(env);
  CHECK_CLAZZ(env, clazz, clazz, nullptr);
  jni_zero::internal::JniJavaCallContext<true> call_context;
  call_context.Init<jni_zero::MethodID::TYPE_STATIC>(
      env,
      clazz,
      "getPrivateKeyClassName",
      "(Ljava/security/PrivateKey;)Ljava/lang/String;",
      &cached_method_id);
  auto _ret = env->CallStaticObjectMethod(clazz, call_context.method_id(), privateKey.obj());
  jstring _ret2 = static_cast<jstring>(_ret);
  return jni_zero::ScopedJavaLocalRef<jstring>(env, _ret2);
}

static jboolean Java_AndroidKeyStore_privateKeySupportsCipher(
    JNIEnv* env,
    const jni_zero::JavaRef<jobject>& privateKey,
    const jni_zero::JavaRef<jstring>& algorithm) {
  static std::atomic<jmethodID> cached_method_id(nullptr);
  jclass clazz = android_net_connectivity_org_chromium_net_AndroidKeyStore_clazz(env);
  CHECK_CLAZZ(env, clazz, clazz, false);
  jni_zero::internal::JniJavaCallContext<true> call_context;
  call_context.Init<jni_zero::MethodID::TYPE_STATIC>(
      env,
      clazz,
      "privateKeySupportsCipher",
      "(Ljava/security/PrivateKey;Ljava/lang/String;)Z",
      &cached_method_id);
  auto _ret = env->CallStaticBooleanMethod(
      clazz,
      call_context.method_id(),
      privateKey.obj(),
      algorithm.obj());
  return _ret;
}

static jboolean Java_AndroidKeyStore_privateKeySupportsSignature(
    JNIEnv* env,
    const jni_zero::JavaRef<jobject>& privateKey,
    const jni_zero::JavaRef<jstring>& algorithm) {
  static std::atomic<jmethodID> cached_method_id(nullptr);
  jclass clazz = android_net_connectivity_org_chromium_net_AndroidKeyStore_clazz(env);
  CHECK_CLAZZ(env, clazz, clazz, false);
  jni_zero::internal::JniJavaCallContext<true> call_context;
  call_context.Init<jni_zero::MethodID::TYPE_STATIC>(
      env,
      clazz,
      "privateKeySupportsSignature",
      "(Ljava/security/PrivateKey;Ljava/lang/String;)Z",
      &cached_method_id);
  auto _ret = env->CallStaticBooleanMethod(
      clazz,
      call_context.method_id(),
      privateKey.obj(),
      algorithm.obj());
  return _ret;
}

static jni_zero::ScopedJavaLocalRef<jbyteArray> Java_AndroidKeyStore_signWithPrivateKey(
    JNIEnv* env,
    const jni_zero::JavaRef<jobject>& privateKey,
    const jni_zero::JavaRef<jstring>& algorithm,
    const jni_zero::JavaRef<jbyteArray>& message) {
  static std::atomic<jmethodID> cached_method_id(nullptr);
  jclass clazz = android_net_connectivity_org_chromium_net_AndroidKeyStore_clazz(env);
  CHECK_CLAZZ(env, clazz, clazz, nullptr);
  jni_zero::internal::JniJavaCallContext<true> call_context;
  call_context.Init<jni_zero::MethodID::TYPE_STATIC>(
      env,
      clazz,
      "signWithPrivateKey",
      "(Ljava/security/PrivateKey;Ljava/lang/String;[B)[B",
      &cached_method_id);
  auto _ret = env->CallStaticObjectMethod(
      clazz,
      call_context.method_id(),
      privateKey.obj(),
      algorithm.obj(),
      message.obj());
  jbyteArray _ret2 = static_cast<jbyteArray>(_ret);
  return jni_zero::ScopedJavaLocalRef<jbyteArray>(env, _ret2);
}



}  // namespace net::android

#endif  // android_net_connectivity_org_chromium_net_AndroidKeyStore_JNI
