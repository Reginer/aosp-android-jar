// This file was generated by
//     //third_party/jni_zero/jni_zero.py
// For
//     android.net.connectivity.org.chromium.net.NetworkActiveNotifier

#ifndef android_net_connectivity_org_chromium_net_NetworkActiveNotifier_JNI
#define android_net_connectivity_org_chromium_net_NetworkActiveNotifier_JNI

#include <jni.h>

#include "third_party/jni_zero/jni_export.h"
#include "third_party/jni_zero/jni_zero_internal.h"

// Class Accessors
#ifndef android_net_connectivity_org_chromium_net_NetworkActiveNotifier_clazz_defined
#define android_net_connectivity_org_chromium_net_NetworkActiveNotifier_clazz_defined
inline jclass android_net_connectivity_org_chromium_net_NetworkActiveNotifier_clazz(JNIEnv* env) {
  static const char kClassName[] = "android.net.connectivity.org.chromium.net.NetworkActiveNotifier";
  static std::atomic<jclass> cached_class;
  return jni_zero::internal::LazyGetClass(env, kClassName, &cached_class);
}
#endif


namespace net {

// Java to native functions
JNI_ZERO_BOUNDARY_EXPORT void Java_android_net_connectivity_J_N_MxPcGW8_1(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePtr) {
  reinterpret_cast<NetworkChangeNotifierDelegateAndroid*>(nativePtr)->NotifyOfDefaultNetworkActive(
      env);
}


// Native to Java functions
static jni_zero::ScopedJavaLocalRef<jobject> Java_NetworkActiveNotifier_build(
    JNIEnv* env,
    jlong nativeNetworkActiveNotifier) {
  static std::atomic<jmethodID> cached_method_id(nullptr);
  jclass clazz = android_net_connectivity_org_chromium_net_NetworkActiveNotifier_clazz(env);
  CHECK_CLAZZ(env, clazz, clazz, nullptr);
  jni_zero::internal::JniJavaCallContext<true> call_context;
  call_context.Init<jni_zero::MethodID::TYPE_STATIC>(
      env,
      clazz,
      "build",
      "(J)Landroid/net/connectivity/org/chromium/net/NetworkActiveNotifier;",
      &cached_method_id);
  auto _ret = env->CallStaticObjectMethod(
      clazz,
      call_context.method_id(),
      nativeNetworkActiveNotifier);
  return jni_zero::ScopedJavaLocalRef<jobject>(env, _ret);
}

static void Java_NetworkActiveNotifier_disableNotifications(
    JNIEnv* env,
    const jni_zero::JavaRef<jobject>& obj) {
  static std::atomic<jmethodID> cached_method_id(nullptr);
  jclass clazz = android_net_connectivity_org_chromium_net_NetworkActiveNotifier_clazz(env);
  CHECK_CLAZZ(env, obj.obj(), clazz);
  jni_zero::internal::JniJavaCallContext<true> call_context;
  call_context.Init<jni_zero::MethodID::TYPE_INSTANCE>(
      env,
      clazz,
      "disableNotifications",
      "()V",
      &cached_method_id);
  env->CallVoidMethod(obj.obj(), call_context.method_id());
}

static void Java_NetworkActiveNotifier_enableNotifications(
    JNIEnv* env,
    const jni_zero::JavaRef<jobject>& obj) {
  static std::atomic<jmethodID> cached_method_id(nullptr);
  jclass clazz = android_net_connectivity_org_chromium_net_NetworkActiveNotifier_clazz(env);
  CHECK_CLAZZ(env, obj.obj(), clazz);
  jni_zero::internal::JniJavaCallContext<true> call_context;
  call_context.Init<jni_zero::MethodID::TYPE_INSTANCE>(
      env,
      clazz,
      "enableNotifications",
      "()V",
      &cached_method_id);
  env->CallVoidMethod(obj.obj(), call_context.method_id());
}

static void Java_NetworkActiveNotifier_fakeDefaultNetworkActive(
    JNIEnv* env,
    const jni_zero::JavaRef<jobject>& obj) {
  static std::atomic<jmethodID> cached_method_id(nullptr);
  jclass clazz = android_net_connectivity_org_chromium_net_NetworkActiveNotifier_clazz(env);
  CHECK_CLAZZ(env, obj.obj(), clazz);
  jni_zero::internal::JniJavaCallContext<true> call_context;
  call_context.Init<jni_zero::MethodID::TYPE_INSTANCE>(
      env,
      clazz,
      "fakeDefaultNetworkActive",
      "()V",
      &cached_method_id);
  env->CallVoidMethod(obj.obj(), call_context.method_id());
}

static jboolean Java_NetworkActiveNotifier_isDefaultNetworkActive(
    JNIEnv* env,
    const jni_zero::JavaRef<jobject>& obj) {
  static std::atomic<jmethodID> cached_method_id(nullptr);
  jclass clazz = android_net_connectivity_org_chromium_net_NetworkActiveNotifier_clazz(env);
  CHECK_CLAZZ(env, obj.obj(), clazz, false);
  jni_zero::internal::JniJavaCallContext<true> call_context;
  call_context.Init<jni_zero::MethodID::TYPE_INSTANCE>(
      env,
      clazz,
      "isDefaultNetworkActive",
      "()Z",
      &cached_method_id);
  auto _ret = env->CallBooleanMethod(obj.obj(), call_context.method_id());
  return _ret;
}



}  // namespace net

#endif  // android_net_connectivity_org_chromium_net_NetworkActiveNotifier_JNI
